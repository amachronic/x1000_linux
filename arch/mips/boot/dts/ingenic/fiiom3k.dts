// SPDX-License-Identifier: GPL-2.0
/dts-v1/;

#include "x1000.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/clock/ingenic,sysost.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	compatible = "fiio,m3k", "ingenic,x1000e";
	model = "FiiO M3K";

	memory {
		device_type = "memory";
		reg = <0x0 0x4000000>;
	};

	battery: battery {
		compatible = "simple-battery";

		device-chemistry = "lithium-ion";
		charge-full-design-microamp-hours = <1100000>;

		voltage-min-design-microvolt = <3300000>;
		voltage-max-design-microvolt = <4200000>;
		over-voltage-threshold-microvolt = <4400000>;

		constant-charge-current-max-microamp = <630000>;
		constant-charge-voltage-max-microvolt = <4200000>;
	};

	backlight-lcd {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 33000 0>;

		pinctrl-names = "default";
		pinctrl-0 = <&pins_pwm0>;
	};

	backlight-buttons {
		compatible = "pwm-backlight";
		pwms = <&pwm 4 100000 0>;

		pinctrl-names = "default";
		pinctrl-0 = <&pins_pwm4>;
	};

	gpio-keys {
		compatible = "gpio-keys";

		button-0 {
			label = "power";
			linux,code = <KEY_POWER>;
			gpios = <&gpb 31 GPIO_ACTIVE_LOW>;
		};

		button-1 {
			label = "play";
			linux,code = <KEY_PLAY>;
			gpios = <&gpa 17 GPIO_ACTIVE_LOW>;
		};

		button-2 {
			label = "vol_up";
			linux,code = <KEY_VOLUMEUP>;
			gpios = <&gpa 19 GPIO_ACTIVE_LOW>;
		};

		button-3 {
			label = "vol_down";
			linux,code = <KEY_VOLUMEDOWN>;
			gpios = <&gpb 28 GPIO_ACTIVE_LOW>;
		};
	};
};

&exclk {
	clock-frequency = <24000000>;
};

&cgu {
	/*
	 * Use the 32.768 kHz oscillator as the parent of the RTC for a higher
	 * precision.
	 */
	assigned-clocks = <&cgu X1000_CLK_RTC>;
	assigned-clock-parents = <&cgu X1000_CLK_RTCLK>;
};

&ost {
	/* 1500 kHz for the system timer and clocksource */
	assigned-clocks = <&ost OST_CLK_PERCPU_TIMER>,
			  <&ost OST_CLK_GLOBAL_TIMER>;
	assigned-clock-rates = <1500000>,
			       <1500000>;
};

&tcu {
	/*
	 * Set channel mask to allow PWM0 and PWM4 to be used.
	 */
	ingenic,pwm-channels-mask = <0x11>;

	/*
	 * Use PCLK as the parent for the PWM backlight timer to
	 * maximize the number of brightness steps.
	 *
	 * Also have to set timer2 to avoid a driver probe error
	 * Set WDT since it seems needed
	 * Set timer1 just in case it is getting used but idk
	 * TODO recheck this stuff
	 */
	assigned-clocks = <&tcu TCU_CLK_TIMER0>,
			  <&tcu TCU_CLK_TIMER1>,
			  <&tcu TCU_CLK_TIMER2>,
			  <&tcu TCU_CLK_WDT>;
	assigned-clock-parents = <&cgu X1000_CLK_PCLK>,
				 <&cgu X1000_CLK_PCLK>,
				 <&cgu X1000_CLK_PCLK>,
				 <&cgu X1000_CLK_RTCLK>;
	assigned-clock-rates = <0>,
			       <1500000>,
			       <1500000>,
			       <24000000>;
};

&rtc {
	ingenic,rtc-valid-value = <0x52544356>;
};

&rng {
	status = "okay";
};

&i2c0 {
	status = "okay";

	clock-frequency = <400000>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c0>;
};

&i2c1 {
	status = "okay";

	clock-frequency = <400000>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c1>;

	ft6x06: touchscreen@38 {
		/* Max 2 touchpoints reported */
		compatible = "focaltech,ft6236";
		reg = <0x38>;

		interrupt-parent = <&gpb>;
		interrupts = <12 IRQ_TYPE_EDGE_FALLING>;

		reset-gpios = <&gpb 15 GPIO_ACTIVE_LOW>;

		touchscreen-size-x = <240>;
		touchscreen-size-y = <901>;
	};
};

&i2c2 {
	status = "okay";

	clock-frequency = <400000>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_i2c2>;
};

&msc0 {
	status = "okay";

	bus-width = <4>;
	max-frequency = <50000000>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_msc0>;

	cd-gpios = <&gpb 6 GPIO_ACTIVE_LOW>;
};

&otg {
	status = "okay";
	dr_mode = "peripheral";
};

&otg_phy {
	status = "okay";
};

&pinctrl {
	pins_i2c0: i2c0 {
		function = "i2c0";
		groups = "i2c0-data";
		bias-pull-up;
	};

	pins_i2c1: i2c1 {
		function = "i2c1";
		groups = "i2c1-data-c";
		bias-pull-up;
	};

	pins_i2c2: i2c2 {
		function = "i2c2";
		groups = "i2c2-data";
		bias-pull-up;
	};

	pins_msc0: msc0 {
		function = "mmc0";
		groups = "mmc0-1bit", "mmc0-4bit";
		bias-disable;
	};

	pins_pwm0: pwm0 {
		function = "pwm0";
		groups = "pwm0";
	};

	pins_pwm4: pwm4 {
		function = "pwm4";
		groups = "pwm4";
	};
};
